/* autogenerated file */

#if !defined(_SC_AIO_LISTIO_MAX)
# if defined(HAVE_CONST__SC_AIO_LISTIO_MAX)
#  define _SC_AIO_LISTIO_MAX _SC_AIO_LISTIO_MAX
# endif
#endif
#if !defined(_SC_AIO_MAX)
# if defined(HAVE_CONST__SC_AIO_MAX)
#  define _SC_AIO_MAX _SC_AIO_MAX
# endif
#endif
#if !defined(_SC_AIO_PRIO_DELTA_MAX)
# if defined(HAVE_CONST__SC_AIO_PRIO_DELTA_MAX)
#  define _SC_AIO_PRIO_DELTA_MAX _SC_AIO_PRIO_DELTA_MAX
# endif
#endif
#if !defined(_SC_ARG_MAX)
# if defined(HAVE_CONST__SC_ARG_MAX)
#  define _SC_ARG_MAX _SC_ARG_MAX
# endif
#endif
#if !defined(_SC_ATEXIT_MAX)
# if defined(HAVE_CONST__SC_ATEXIT_MAX)
#  define _SC_ATEXIT_MAX _SC_ATEXIT_MAX
# endif
#endif
#if !defined(_SC_BC_BASE_MAX)
# if defined(HAVE_CONST__SC_BC_BASE_MAX)
#  define _SC_BC_BASE_MAX _SC_BC_BASE_MAX
# endif
#endif
#if !defined(_SC_BC_DIM_MAX)
# if defined(HAVE_CONST__SC_BC_DIM_MAX)
#  define _SC_BC_DIM_MAX _SC_BC_DIM_MAX
# endif
#endif
#if !defined(_SC_BC_SCALE_MAX)
# if defined(HAVE_CONST__SC_BC_SCALE_MAX)
#  define _SC_BC_SCALE_MAX _SC_BC_SCALE_MAX
# endif
#endif
#if !defined(_SC_BC_STRING_MAX)
# if defined(HAVE_CONST__SC_BC_STRING_MAX)
#  define _SC_BC_STRING_MAX _SC_BC_STRING_MAX
# endif
#endif
#if !defined(_SC_CHILD_MAX)
# if defined(HAVE_CONST__SC_CHILD_MAX)
#  define _SC_CHILD_MAX _SC_CHILD_MAX
# endif
#endif
#if !defined(_SC_CLK_TCK)
# if defined(HAVE_CONST__SC_CLK_TCK)
#  define _SC_CLK_TCK _SC_CLK_TCK
# endif
#endif
#if !defined(_SC_COLL_WEIGHTS_MAX)
# if defined(HAVE_CONST__SC_COLL_WEIGHTS_MAX)
#  define _SC_COLL_WEIGHTS_MAX _SC_COLL_WEIGHTS_MAX
# endif
#endif
#if !defined(_SC_DELAYTIMER_MAX)
# if defined(HAVE_CONST__SC_DELAYTIMER_MAX)
#  define _SC_DELAYTIMER_MAX _SC_DELAYTIMER_MAX
# endif
#endif
#if !defined(_SC_EXPR_NEST_MAX)
# if defined(HAVE_CONST__SC_EXPR_NEST_MAX)
#  define _SC_EXPR_NEST_MAX _SC_EXPR_NEST_MAX
# endif
#endif
#if !defined(_SC_HOST_NAME_MAX)
# if defined(HAVE_CONST__SC_HOST_NAME_MAX)
#  define _SC_HOST_NAME_MAX _SC_HOST_NAME_MAX
# endif
#endif
#if !defined(_SC_IOV_MAX)
# if defined(HAVE_CONST__SC_IOV_MAX)
#  define _SC_IOV_MAX _SC_IOV_MAX
# endif
#endif
#if !defined(_SC_LINE_MAX)
# if defined(HAVE_CONST__SC_LINE_MAX)
#  define _SC_LINE_MAX _SC_LINE_MAX
# endif
#endif
#if !defined(_SC_LOGIN_NAME_MAX)
# if defined(HAVE_CONST__SC_LOGIN_NAME_MAX)
#  define _SC_LOGIN_NAME_MAX _SC_LOGIN_NAME_MAX
# endif
#endif
#if !defined(_SC_NGROUPS_MAX)
# if defined(HAVE_CONST__SC_NGROUPS_MAX)
#  define _SC_NGROUPS_MAX _SC_NGROUPS_MAX
# endif
#endif
#if !defined(_SC_GETGR_R_SIZE_MAX)
# if defined(HAVE_CONST__SC_GETGR_R_SIZE_MAX)
#  define _SC_GETGR_R_SIZE_MAX _SC_GETGR_R_SIZE_MAX
# endif
#endif
#if !defined(_SC_GETPW_R_SIZE_MAX)
# if defined(HAVE_CONST__SC_GETPW_R_SIZE_MAX)
#  define _SC_GETPW_R_SIZE_MAX _SC_GETPW_R_SIZE_MAX
# endif
#endif
#if !defined(_SC_MQ_OPEN_MAX)
# if defined(HAVE_CONST__SC_MQ_OPEN_MAX)
#  define _SC_MQ_OPEN_MAX _SC_MQ_OPEN_MAX
# endif
#endif
#if !defined(_SC_MQ_PRIO_MAX)
# if defined(HAVE_CONST__SC_MQ_PRIO_MAX)
#  define _SC_MQ_PRIO_MAX _SC_MQ_PRIO_MAX
# endif
#endif
#if !defined(_SC_OPEN_MAX)
# if defined(HAVE_CONST__SC_OPEN_MAX)
#  define _SC_OPEN_MAX _SC_OPEN_MAX
# endif
#endif
#if !defined(_SC_ADVISORY_INFO)
# if defined(HAVE_CONST__SC_ADVISORY_INFO)
#  define _SC_ADVISORY_INFO _SC_ADVISORY_INFO
# endif
#endif
#if !defined(_SC_BARRIERS)
# if defined(HAVE_CONST__SC_BARRIERS)
#  define _SC_BARRIERS _SC_BARRIERS
# endif
#endif
#if !defined(_SC_ASYNCHRONOUS_IO)
# if defined(HAVE_CONST__SC_ASYNCHRONOUS_IO)
#  define _SC_ASYNCHRONOUS_IO _SC_ASYNCHRONOUS_IO
# endif
#endif
#if !defined(_SC_CLOCK_SELECTION)
# if defined(HAVE_CONST__SC_CLOCK_SELECTION)
#  define _SC_CLOCK_SELECTION _SC_CLOCK_SELECTION
# endif
#endif
#if !defined(_SC_CPUTIME)
# if defined(HAVE_CONST__SC_CPUTIME)
#  define _SC_CPUTIME _SC_CPUTIME
# endif
#endif
#if !defined(_SC_FSYNC)
# if defined(HAVE_CONST__SC_FSYNC)
#  define _SC_FSYNC _SC_FSYNC
# endif
#endif
#if !defined(_SC_IPV6)
# if defined(HAVE_CONST__SC_IPV6)
#  define _SC_IPV6 _SC_IPV6
# endif
#endif
#if !defined(_SC_JOB_CONTROL)
# if defined(HAVE_CONST__SC_JOB_CONTROL)
#  define _SC_JOB_CONTROL _SC_JOB_CONTROL
# endif
#endif
#if !defined(_SC_MAPPED_FILES)
# if defined(HAVE_CONST__SC_MAPPED_FILES)
#  define _SC_MAPPED_FILES _SC_MAPPED_FILES
# endif
#endif
#if !defined(_SC_MEMLOCK)
# if defined(HAVE_CONST__SC_MEMLOCK)
#  define _SC_MEMLOCK _SC_MEMLOCK
# endif
#endif
#if !defined(_SC_MEMLOCK_RANGE)
# if defined(HAVE_CONST__SC_MEMLOCK_RANGE)
#  define _SC_MEMLOCK_RANGE _SC_MEMLOCK_RANGE
# endif
#endif
#if !defined(_SC_MEMORY_PROTECTION)
# if defined(HAVE_CONST__SC_MEMORY_PROTECTION)
#  define _SC_MEMORY_PROTECTION _SC_MEMORY_PROTECTION
# endif
#endif
#if !defined(_SC_MESSAGE_PASSING)
# if defined(HAVE_CONST__SC_MESSAGE_PASSING)
#  define _SC_MESSAGE_PASSING _SC_MESSAGE_PASSING
# endif
#endif
#if !defined(_SC_MONOTONIC_CLOCK)
# if defined(HAVE_CONST__SC_MONOTONIC_CLOCK)
#  define _SC_MONOTONIC_CLOCK _SC_MONOTONIC_CLOCK
# endif
#endif
#if !defined(_SC_PRIORITIZED_IO)
# if defined(HAVE_CONST__SC_PRIORITIZED_IO)
#  define _SC_PRIORITIZED_IO _SC_PRIORITIZED_IO
# endif
#endif
#if !defined(_SC_PRIORITY_SCHEDULING)
# if defined(HAVE_CONST__SC_PRIORITY_SCHEDULING)
#  define _SC_PRIORITY_SCHEDULING _SC_PRIORITY_SCHEDULING
# endif
#endif
#if !defined(_SC_RAW_SOCKETS)
# if defined(HAVE_CONST__SC_RAW_SOCKETS)
#  define _SC_RAW_SOCKETS _SC_RAW_SOCKETS
# endif
#endif
#if !defined(_SC_READER_WRITER_LOCKS)
# if defined(HAVE_CONST__SC_READER_WRITER_LOCKS)
#  define _SC_READER_WRITER_LOCKS _SC_READER_WRITER_LOCKS
# endif
#endif
#if !defined(_SC_REALTIME_SIGNALS)
# if defined(HAVE_CONST__SC_REALTIME_SIGNALS)
#  define _SC_REALTIME_SIGNALS _SC_REALTIME_SIGNALS
# endif
#endif
#if !defined(_SC_REGEXP)
# if defined(HAVE_CONST__SC_REGEXP)
#  define _SC_REGEXP _SC_REGEXP
# endif
#endif
#if !defined(_SC_SAVED_IDS)
# if defined(HAVE_CONST__SC_SAVED_IDS)
#  define _SC_SAVED_IDS _SC_SAVED_IDS
# endif
#endif
#if !defined(_SC_SEMAPHORES)
# if defined(HAVE_CONST__SC_SEMAPHORES)
#  define _SC_SEMAPHORES _SC_SEMAPHORES
# endif
#endif
#if !defined(_SC_SHARED_MEMORY_OBJECTS)
# if defined(HAVE_CONST__SC_SHARED_MEMORY_OBJECTS)
#  define _SC_SHARED_MEMORY_OBJECTS _SC_SHARED_MEMORY_OBJECTS
# endif
#endif
#if !defined(_SC_SHELL)
# if defined(HAVE_CONST__SC_SHELL)
#  define _SC_SHELL _SC_SHELL
# endif
#endif
#if !defined(_SC_SPAWN)
# if defined(HAVE_CONST__SC_SPAWN)
#  define _SC_SPAWN _SC_SPAWN
# endif
#endif
#if !defined(_SC_SPIN_LOCKS)
# if defined(HAVE_CONST__SC_SPIN_LOCKS)
#  define _SC_SPIN_LOCKS _SC_SPIN_LOCKS
# endif
#endif
#if !defined(_SC_SPORADIC_SERVER)
# if defined(HAVE_CONST__SC_SPORADIC_SERVER)
#  define _SC_SPORADIC_SERVER _SC_SPORADIC_SERVER
# endif
#endif
#if !defined(_SC_SS_REPL_MAX)
# if defined(HAVE_CONST__SC_SS_REPL_MAX)
#  define _SC_SS_REPL_MAX _SC_SS_REPL_MAX
# endif
#endif
#if !defined(_SC_SYNCHRONIZED_IO)
# if defined(HAVE_CONST__SC_SYNCHRONIZED_IO)
#  define _SC_SYNCHRONIZED_IO _SC_SYNCHRONIZED_IO
# endif
#endif
#if !defined(_SC_THREAD_ATTR_STACKADDR)
# if defined(HAVE_CONST__SC_THREAD_ATTR_STACKADDR)
#  define _SC_THREAD_ATTR_STACKADDR _SC_THREAD_ATTR_STACKADDR
# endif
#endif
#if !defined(_SC_THREAD_ATTR_STACKSIZE)
# if defined(HAVE_CONST__SC_THREAD_ATTR_STACKSIZE)
#  define _SC_THREAD_ATTR_STACKSIZE _SC_THREAD_ATTR_STACKSIZE
# endif
#endif
#if !defined(_SC_THREAD_CPUTIME)
# if defined(HAVE_CONST__SC_THREAD_CPUTIME)
#  define _SC_THREAD_CPUTIME _SC_THREAD_CPUTIME
# endif
#endif
#if !defined(_SC_THREAD_PRIO_INHERIT)
# if defined(HAVE_CONST__SC_THREAD_PRIO_INHERIT)
#  define _SC_THREAD_PRIO_INHERIT _SC_THREAD_PRIO_INHERIT
# endif
#endif
#if !defined(_SC_THREAD_PRIO_PROTECT)
# if defined(HAVE_CONST__SC_THREAD_PRIO_PROTECT)
#  define _SC_THREAD_PRIO_PROTECT _SC_THREAD_PRIO_PROTECT
# endif
#endif
#if !defined(_SC_THREAD_PRIORITY_SCHEDULING)
# if defined(HAVE_CONST__SC_THREAD_PRIORITY_SCHEDULING)
#  define _SC_THREAD_PRIORITY_SCHEDULING _SC_THREAD_PRIORITY_SCHEDULING
# endif
#endif
#if !defined(_SC_THREAD_PROCESS_SHARED)
# if defined(HAVE_CONST__SC_THREAD_PROCESS_SHARED)
#  define _SC_THREAD_PROCESS_SHARED _SC_THREAD_PROCESS_SHARED
# endif
#endif
#if !defined(_SC_THREAD_ROBUST_PRIO_INHERIT)
# if defined(HAVE_CONST__SC_THREAD_ROBUST_PRIO_INHERIT)
#  define _SC_THREAD_ROBUST_PRIO_INHERIT _SC_THREAD_ROBUST_PRIO_INHERIT
# endif
#endif
#if !defined(_SC_THREAD_ROBUST_PRIO_PROTECT)
# if defined(HAVE_CONST__SC_THREAD_ROBUST_PRIO_PROTECT)
#  define _SC_THREAD_ROBUST_PRIO_PROTECT _SC_THREAD_ROBUST_PRIO_PROTECT
# endif
#endif
#if !defined(_SC_THREAD_SAFE_FUNCTIONS)
# if defined(HAVE_CONST__SC_THREAD_SAFE_FUNCTIONS)
#  define _SC_THREAD_SAFE_FUNCTIONS _SC_THREAD_SAFE_FUNCTIONS
# endif
#endif
#if !defined(_SC_THREAD_SPORADIC_SERVER)
# if defined(HAVE_CONST__SC_THREAD_SPORADIC_SERVER)
#  define _SC_THREAD_SPORADIC_SERVER _SC_THREAD_SPORADIC_SERVER
# endif
#endif
#if !defined(_SC_THREADS)
# if defined(HAVE_CONST__SC_THREADS)
#  define _SC_THREADS _SC_THREADS
# endif
#endif
#if !defined(_SC_TIMEOUTS)
# if defined(HAVE_CONST__SC_TIMEOUTS)
#  define _SC_TIMEOUTS _SC_TIMEOUTS
# endif
#endif
#if !defined(_SC_TIMERS)
# if defined(HAVE_CONST__SC_TIMERS)
#  define _SC_TIMERS _SC_TIMERS
# endif
#endif
#if !defined(_SC_TRACE)
# if defined(HAVE_CONST__SC_TRACE)
#  define _SC_TRACE _SC_TRACE
# endif
#endif
#if !defined(_SC_TRACE_EVENT_FILTER)
# if defined(HAVE_CONST__SC_TRACE_EVENT_FILTER)
#  define _SC_TRACE_EVENT_FILTER _SC_TRACE_EVENT_FILTER
# endif
#endif
#if !defined(_SC_TRACE_EVENT_NAME_MAX)
# if defined(HAVE_CONST__SC_TRACE_EVENT_NAME_MAX)
#  define _SC_TRACE_EVENT_NAME_MAX _SC_TRACE_EVENT_NAME_MAX
# endif
#endif
#if !defined(_SC_TRACE_INHERIT)
# if defined(HAVE_CONST__SC_TRACE_INHERIT)
#  define _SC_TRACE_INHERIT _SC_TRACE_INHERIT
# endif
#endif
#if !defined(_SC_TRACE_LOG)
# if defined(HAVE_CONST__SC_TRACE_LOG)
#  define _SC_TRACE_LOG _SC_TRACE_LOG
# endif
#endif
#if !defined(_SC_TRACE_NAME_MAX)
# if defined(HAVE_CONST__SC_TRACE_NAME_MAX)
#  define _SC_TRACE_NAME_MAX _SC_TRACE_NAME_MAX
# endif
#endif
#if !defined(_SC_TRACE_SYS_MAX)
# if defined(HAVE_CONST__SC_TRACE_SYS_MAX)
#  define _SC_TRACE_SYS_MAX _SC_TRACE_SYS_MAX
# endif
#endif
#if !defined(_SC_TRACE_USER_EVENT_MAX)
# if defined(HAVE_CONST__SC_TRACE_USER_EVENT_MAX)
#  define _SC_TRACE_USER_EVENT_MAX _SC_TRACE_USER_EVENT_MAX
# endif
#endif
#if !defined(_SC_TYPED_MEMORY_OBJECTS)
# if defined(HAVE_CONST__SC_TYPED_MEMORY_OBJECTS)
#  define _SC_TYPED_MEMORY_OBJECTS _SC_TYPED_MEMORY_OBJECTS
# endif
#endif
#if !defined(_SC_VERSION)
# if defined(HAVE_CONST__SC_VERSION)
#  define _SC_VERSION _SC_VERSION
# endif
#endif
#if !defined(_SC_V7_ILP32_OFF32)
# if defined(HAVE_CONST__SC_V7_ILP32_OFF32)
#  define _SC_V7_ILP32_OFF32 _SC_V7_ILP32_OFF32
# endif
#endif
#if !defined(_SC_V7_ILP32_OFFBIG)
# if defined(HAVE_CONST__SC_V7_ILP32_OFFBIG)
#  define _SC_V7_ILP32_OFFBIG _SC_V7_ILP32_OFFBIG
# endif
#endif
#if !defined(_SC_V7_LP64_OFF64)
# if defined(HAVE_CONST__SC_V7_LP64_OFF64)
#  define _SC_V7_LP64_OFF64 _SC_V7_LP64_OFF64
# endif
#endif
#if !defined(_SC_V7_LPBIG_OFFBIG)
# if defined(HAVE_CONST__SC_V7_LPBIG_OFFBIG)
#  define _SC_V7_LPBIG_OFFBIG _SC_V7_LPBIG_OFFBIG
# endif
#endif
#if !defined(_SC_V6_ILP32_OFF32)
# if defined(HAVE_CONST__SC_V6_ILP32_OFF32)
#  define _SC_V6_ILP32_OFF32 _SC_V6_ILP32_OFF32
# endif
#endif
#if !defined(_SC_V6_ILP32_OFFBIG)
# if defined(HAVE_CONST__SC_V6_ILP32_OFFBIG)
#  define _SC_V6_ILP32_OFFBIG _SC_V6_ILP32_OFFBIG
# endif
#endif
#if !defined(_SC_V6_LP64_OFF64)
# if defined(HAVE_CONST__SC_V6_LP64_OFF64)
#  define _SC_V6_LP64_OFF64 _SC_V6_LP64_OFF64
# endif
#endif
#if !defined(_SC_V6_LPBIG_OFFBIG)
# if defined(HAVE_CONST__SC_V6_LPBIG_OFFBIG)
#  define _SC_V6_LPBIG_OFFBIG _SC_V6_LPBIG_OFFBIG
# endif
#endif
#if !defined(_SC_2_C_BIND)
# if defined(HAVE_CONST__SC_2_C_BIND)
#  define _SC_2_C_BIND _SC_2_C_BIND
# endif
#endif
#if !defined(_SC_2_C_DEV)
# if defined(HAVE_CONST__SC_2_C_DEV)
#  define _SC_2_C_DEV _SC_2_C_DEV
# endif
#endif
#if !defined(_SC_2_CHAR_TERM)
# if defined(HAVE_CONST__SC_2_CHAR_TERM)
#  define _SC_2_CHAR_TERM _SC_2_CHAR_TERM
# endif
#endif
#if !defined(_SC_2_FORT_DEV)
# if defined(HAVE_CONST__SC_2_FORT_DEV)
#  define _SC_2_FORT_DEV _SC_2_FORT_DEV
# endif
#endif
#if !defined(_SC_2_FORT_RUN)
# if defined(HAVE_CONST__SC_2_FORT_RUN)
#  define _SC_2_FORT_RUN _SC_2_FORT_RUN
# endif
#endif
#if !defined(_SC_2_LOCALEDEF)
# if defined(HAVE_CONST__SC_2_LOCALEDEF)
#  define _SC_2_LOCALEDEF _SC_2_LOCALEDEF
# endif
#endif
#if !defined(_SC_2_PBS)
# if defined(HAVE_CONST__SC_2_PBS)
#  define _SC_2_PBS _SC_2_PBS
# endif
#endif
#if !defined(_SC_2_PBS_ACCOUNTING)
# if defined(HAVE_CONST__SC_2_PBS_ACCOUNTING)
#  define _SC_2_PBS_ACCOUNTING _SC_2_PBS_ACCOUNTING
# endif
#endif
#if !defined(_SC_2_PBS_CHECKPOINT)
# if defined(HAVE_CONST__SC_2_PBS_CHECKPOINT)
#  define _SC_2_PBS_CHECKPOINT _SC_2_PBS_CHECKPOINT
# endif
#endif
#if !defined(_SC_2_PBS_LOCATE)
# if defined(HAVE_CONST__SC_2_PBS_LOCATE)
#  define _SC_2_PBS_LOCATE _SC_2_PBS_LOCATE
# endif
#endif
#if !defined(_SC_2_PBS_MESSAGE)
# if defined(HAVE_CONST__SC_2_PBS_MESSAGE)
#  define _SC_2_PBS_MESSAGE _SC_2_PBS_MESSAGE
# endif
#endif
#if !defined(_SC_2_PBS_TRACK)
# if defined(HAVE_CONST__SC_2_PBS_TRACK)
#  define _SC_2_PBS_TRACK _SC_2_PBS_TRACK
# endif
#endif
#if !defined(_SC_2_SW_DEV)
# if defined(HAVE_CONST__SC_2_SW_DEV)
#  define _SC_2_SW_DEV _SC_2_SW_DEV
# endif
#endif
#if !defined(_SC_2_UPE)
# if defined(HAVE_CONST__SC_2_UPE)
#  define _SC_2_UPE _SC_2_UPE
# endif
#endif
#if !defined(_SC_2_VERSION)
# if defined(HAVE_CONST__SC_2_VERSION)
#  define _SC_2_VERSION _SC_2_VERSION
# endif
#endif
#if !defined(_SC_PAGE_SIZE)
# if defined(HAVE_CONST__SC_PAGE_SIZE)
#  define _SC_PAGE_SIZE _SC_PAGE_SIZE
# endif
#endif
#if !defined(_SC_PAGESIZE)
# if defined(HAVE_CONST__SC_PAGESIZE)
#  define _SC_PAGESIZE _SC_PAGESIZE
# endif
#endif
#if !defined(_SC_THREAD_DESTRUCTOR_ITERATIONS)
# if defined(HAVE_CONST__SC_THREAD_DESTRUCTOR_ITERATIONS)
#  define _SC_THREAD_DESTRUCTOR_ITERATIONS _SC_THREAD_DESTRUCTOR_ITERATIONS
# endif
#endif
#if !defined(_SC_THREAD_KEYS_MAX)
# if defined(HAVE_CONST__SC_THREAD_KEYS_MAX)
#  define _SC_THREAD_KEYS_MAX _SC_THREAD_KEYS_MAX
# endif
#endif
#if !defined(_SC_THREAD_STACK_MIN)
# if defined(HAVE_CONST__SC_THREAD_STACK_MIN)
#  define _SC_THREAD_STACK_MIN _SC_THREAD_STACK_MIN
# endif
#endif
#if !defined(_SC_THREAD_THREADS_MAX)
# if defined(HAVE_CONST__SC_THREAD_THREADS_MAX)
#  define _SC_THREAD_THREADS_MAX _SC_THREAD_THREADS_MAX
# endif
#endif
#if !defined(_SC_RE_DUP_MAX)
# if defined(HAVE_CONST__SC_RE_DUP_MAX)
#  define _SC_RE_DUP_MAX _SC_RE_DUP_MAX
# endif
#endif
#if !defined(_SC_RTSIG_MAX)
# if defined(HAVE_CONST__SC_RTSIG_MAX)
#  define _SC_RTSIG_MAX _SC_RTSIG_MAX
# endif
#endif
#if !defined(_SC_SEM_NSEMS_MAX)
# if defined(HAVE_CONST__SC_SEM_NSEMS_MAX)
#  define _SC_SEM_NSEMS_MAX _SC_SEM_NSEMS_MAX
# endif
#endif
#if !defined(_SC_SEM_VALUE_MAX)
# if defined(HAVE_CONST__SC_SEM_VALUE_MAX)
#  define _SC_SEM_VALUE_MAX _SC_SEM_VALUE_MAX
# endif
#endif
#if !defined(_SC_SIGQUEUE_MAX)
# if defined(HAVE_CONST__SC_SIGQUEUE_MAX)
#  define _SC_SIGQUEUE_MAX _SC_SIGQUEUE_MAX
# endif
#endif
#if !defined(_SC_STREAM_MAX)
# if defined(HAVE_CONST__SC_STREAM_MAX)
#  define _SC_STREAM_MAX _SC_STREAM_MAX
# endif
#endif
#if !defined(_SC_SYMLOOP_MAX)
# if defined(HAVE_CONST__SC_SYMLOOP_MAX)
#  define _SC_SYMLOOP_MAX _SC_SYMLOOP_MAX
# endif
#endif
#if !defined(_SC_TIMER_MAX)
# if defined(HAVE_CONST__SC_TIMER_MAX)
#  define _SC_TIMER_MAX _SC_TIMER_MAX
# endif
#endif
#if !defined(_SC_TTY_NAME_MAX)
# if defined(HAVE_CONST__SC_TTY_NAME_MAX)
#  define _SC_TTY_NAME_MAX _SC_TTY_NAME_MAX
# endif
#endif
#if !defined(_SC_TZNAME_MAX)
# if defined(HAVE_CONST__SC_TZNAME_MAX)
#  define _SC_TZNAME_MAX _SC_TZNAME_MAX
# endif
#endif
#if !defined(_SC_XOPEN_CRYPT)
# if defined(HAVE_CONST__SC_XOPEN_CRYPT)
#  define _SC_XOPEN_CRYPT _SC_XOPEN_CRYPT
# endif
#endif
#if !defined(_SC_XOPEN_ENH_I18N)
# if defined(HAVE_CONST__SC_XOPEN_ENH_I18N)
#  define _SC_XOPEN_ENH_I18N _SC_XOPEN_ENH_I18N
# endif
#endif
#if !defined(_SC_XOPEN_REALTIME)
# if defined(HAVE_CONST__SC_XOPEN_REALTIME)
#  define _SC_XOPEN_REALTIME _SC_XOPEN_REALTIME
# endif
#endif
#if !defined(_SC_XOPEN_REALTIME_THREADS)
# if defined(HAVE_CONST__SC_XOPEN_REALTIME_THREADS)
#  define _SC_XOPEN_REALTIME_THREADS _SC_XOPEN_REALTIME_THREADS
# endif
#endif
#if !defined(_SC_XOPEN_SHM)
# if defined(HAVE_CONST__SC_XOPEN_SHM)
#  define _SC_XOPEN_SHM _SC_XOPEN_SHM
# endif
#endif
#if !defined(_SC_XOPEN_STREAMS)
# if defined(HAVE_CONST__SC_XOPEN_STREAMS)
#  define _SC_XOPEN_STREAMS _SC_XOPEN_STREAMS
# endif
#endif
#if !defined(_SC_XOPEN_UNIX)
# if defined(HAVE_CONST__SC_XOPEN_UNIX)
#  define _SC_XOPEN_UNIX _SC_XOPEN_UNIX
# endif
#endif
#if !defined(_SC_XOPEN_UUCP)
# if defined(HAVE_CONST__SC_XOPEN_UUCP)
#  define _SC_XOPEN_UUCP _SC_XOPEN_UUCP
# endif
#endif
#if !defined(_SC_XOPEN_VERSION)
# if defined(HAVE_CONST__SC_XOPEN_VERSION)
#  define _SC_XOPEN_VERSION _SC_XOPEN_VERSION
# endif
#endif
#if !defined(_SC_PHYS_PAGES)
# if defined(HAVE_CONST__SC_PHYS_PAGES)
#  define _SC_PHYS_PAGES _SC_PHYS_PAGES
# endif
#endif
#if !defined(_SC_AVPHYS_PAGES)
# if defined(HAVE_CONST__SC_AVPHYS_PAGES)
#  define _SC_AVPHYS_PAGES _SC_AVPHYS_PAGES
# endif
#endif
#if !defined(_SC_NPROCESSORS_CONF)
# if defined(HAVE_CONST__SC_NPROCESSORS_CONF)
#  define _SC_NPROCESSORS_CONF _SC_NPROCESSORS_CONF
# endif
#endif
#if !defined(_SC_NPROCESSORS_ONLN)
# if defined(HAVE_CONST__SC_NPROCESSORS_ONLN)
#  define _SC_NPROCESSORS_ONLN _SC_NPROCESSORS_ONLN
# endif
#endif
#if !defined(_SC_CPUSET_SIZE)
# if defined(HAVE_CONST__SC_CPUSET_SIZE)
#  define _SC_CPUSET_SIZE _SC_CPUSET_SIZE
# endif
#endif
#if !defined(_CS_PATH)
# if defined(HAVE_CONST__CS_PATH)
#  define _CS_PATH _CS_PATH
# endif
#endif
#if !defined(_CS_POSIX_V7_ILP32_OFF32_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_ILP32_OFF32_CFLAGS)
#  define _CS_POSIX_V7_ILP32_OFF32_CFLAGS _CS_POSIX_V7_ILP32_OFF32_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_ILP32_OFF32_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_ILP32_OFF32_LDFLAGS)
#  define _CS_POSIX_V7_ILP32_OFF32_LDFLAGS _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_ILP32_OFF32_LIBS)
# if defined(HAVE_CONST__CS_POSIX_V7_ILP32_OFF32_LIBS)
#  define _CS_POSIX_V7_ILP32_OFF32_LIBS _CS_POSIX_V7_ILP32_OFF32_LIBS
# endif
#endif
#if !defined(_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_ILP32_OFFBIG_CFLAGS)
#  define _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS)
#  define _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_ILP32_OFFBIG_LIBS)
# if defined(HAVE_CONST__CS_POSIX_V7_ILP32_OFFBIG_LIBS)
#  define _CS_POSIX_V7_ILP32_OFFBIG_LIBS _CS_POSIX_V7_ILP32_OFFBIG_LIBS
# endif
#endif
#if !defined(_CS_POSIX_V7_LP64_OFF64_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_LP64_OFF64_CFLAGS)
#  define _CS_POSIX_V7_LP64_OFF64_CFLAGS _CS_POSIX_V7_LP64_OFF64_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_LP64_OFF64_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_LP64_OFF64_LDFLAGS)
#  define _CS_POSIX_V7_LP64_OFF64_LDFLAGS _CS_POSIX_V7_LP64_OFF64_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_LP64_OFF64_LIBS)
# if defined(HAVE_CONST__CS_POSIX_V7_LP64_OFF64_LIBS)
#  define _CS_POSIX_V7_LP64_OFF64_LIBS _CS_POSIX_V7_LP64_OFF64_LIBS
# endif
#endif
#if !defined(_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS)
#  define _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS)
#  define _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_LPBIG_OFFBIG_LIBS)
# if defined(HAVE_CONST__CS_POSIX_V7_LPBIG_OFFBIG_LIBS)
#  define _CS_POSIX_V7_LPBIG_OFFBIG_LIBS _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
# endif
#endif
#if !defined(_CS_POSIX_V7_THREADS_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_THREADS_CFLAGS)
#  define _CS_POSIX_V7_THREADS_CFLAGS _CS_POSIX_V7_THREADS_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_THREADS_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V7_THREADS_LDFLAGS)
#  define _CS_POSIX_V7_THREADS_LDFLAGS _CS_POSIX_V7_THREADS_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS)
# if defined(HAVE_CONST__CS_POSIX_V7_WIDTH_RESTRICTED_ENVS)
#  define _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
# endif
#endif
#if !defined(_CS_V7_ENV)
# if defined(HAVE_CONST__CS_V7_ENV)
#  define _CS_V7_ENV _CS_V7_ENV
# endif
#endif
#if !defined(_CS_POSIX_V6_ILP32_OFF32_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V6_ILP32_OFF32_CFLAGS)
#  define _CS_POSIX_V6_ILP32_OFF32_CFLAGS _CS_POSIX_V6_ILP32_OFF32_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V6_ILP32_OFF32_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V6_ILP32_OFF32_LDFLAGS)
#  define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V6_ILP32_OFF32_LIBS)
# if defined(HAVE_CONST__CS_POSIX_V6_ILP32_OFF32_LIBS)
#  define _CS_POSIX_V6_ILP32_OFF32_LIBS _CS_POSIX_V6_ILP32_OFF32_LIBS
# endif
#endif
#if !defined(_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V6_ILP32_OFFBIG_CFLAGS)
#  define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS)
#  define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V6_ILP32_OFFBIG_LIBS)
# if defined(HAVE_CONST__CS_POSIX_V6_ILP32_OFFBIG_LIBS)
#  define _CS_POSIX_V6_ILP32_OFFBIG_LIBS _CS_POSIX_V6_ILP32_OFFBIG_LIBS
# endif
#endif
#if !defined(_CS_POSIX_V6_LP64_OFF64_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V6_LP64_OFF64_CFLAGS)
#  define _CS_POSIX_V6_LP64_OFF64_CFLAGS _CS_POSIX_V6_LP64_OFF64_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V6_LP64_OFF64_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V6_LP64_OFF64_LDFLAGS)
#  define _CS_POSIX_V6_LP64_OFF64_LDFLAGS _CS_POSIX_V6_LP64_OFF64_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V6_LP64_OFF64_LIBS)
# if defined(HAVE_CONST__CS_POSIX_V6_LP64_OFF64_LIBS)
#  define _CS_POSIX_V6_LP64_OFF64_LIBS _CS_POSIX_V6_LP64_OFF64_LIBS
# endif
#endif
#if !defined(_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS)
#  define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS)
# if defined(HAVE_CONST__CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS)
#  define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
# endif
#endif
#if !defined(_CS_POSIX_V6_LPBIG_OFFBIG_LIBS)
# if defined(HAVE_CONST__CS_POSIX_V6_LPBIG_OFFBIG_LIBS)
#  define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
# endif
#endif
#if !defined(_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS)
# if defined(HAVE_CONST__CS_POSIX_V6_WIDTH_RESTRICTED_ENVS)
#  define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
# endif
#endif
#if !defined(_CS_V6_ENV)
# if defined(HAVE_CONST__CS_V6_ENV)
#  define _CS_V6_ENV _CS_V6_ENV
# endif
#endif
#if !defined(_CS_GNU_LIBC_VERSION)
# if defined(HAVE_CONST__CS_GNU_LIBC_VERSION)
#  define _CS_GNU_LIBC_VERSION _CS_GNU_LIBC_VERSION
# endif
#endif
#if !defined(_CS_GNU_LIBPTHREAD_VERSION)
# if defined(HAVE_CONST__CS_GNU_LIBPTHREAD_VERSION)
#  define _CS_GNU_LIBPTHREAD_VERSION _CS_GNU_LIBPTHREAD_VERSION
# endif
#endif
#if !defined(_PC_FILESIZEBITS)
# if defined(HAVE_CONST__PC_FILESIZEBITS)
#  define _PC_FILESIZEBITS _PC_FILESIZEBITS
# endif
#endif
#if !defined(_PC_LINK_MAX)
# if defined(HAVE_CONST__PC_LINK_MAX)
#  define _PC_LINK_MAX _PC_LINK_MAX
# endif
#endif
#if !defined(_PC_MAX_CANON)
# if defined(HAVE_CONST__PC_MAX_CANON)
#  define _PC_MAX_CANON _PC_MAX_CANON
# endif
#endif
#if !defined(_PC_MAX_INPUT)
# if defined(HAVE_CONST__PC_MAX_INPUT)
#  define _PC_MAX_INPUT _PC_MAX_INPUT
# endif
#endif
#if !defined(_PC_NAME_MAX)
# if defined(HAVE_CONST__PC_NAME_MAX)
#  define _PC_NAME_MAX _PC_NAME_MAX
# endif
#endif
#if !defined(_PC_PATH_MAX)
# if defined(HAVE_CONST__PC_PATH_MAX)
#  define _PC_PATH_MAX _PC_PATH_MAX
# endif
#endif
#if !defined(_PC_PIPE_BUF)
# if defined(HAVE_CONST__PC_PIPE_BUF)
#  define _PC_PIPE_BUF _PC_PIPE_BUF
# endif
#endif
#if !defined(_PC_2_SYMLINKS)
# if defined(HAVE_CONST__PC_2_SYMLINKS)
#  define _PC_2_SYMLINKS _PC_2_SYMLINKS
# endif
#endif
#if !defined(_PC_ALLOC_SIZE_MIN)
# if defined(HAVE_CONST__PC_ALLOC_SIZE_MIN)
#  define _PC_ALLOC_SIZE_MIN _PC_ALLOC_SIZE_MIN
# endif
#endif
#if !defined(_PC_REC_INCR_XFER_SIZE)
# if defined(HAVE_CONST__PC_REC_INCR_XFER_SIZE)
#  define _PC_REC_INCR_XFER_SIZE _PC_REC_INCR_XFER_SIZE
# endif
#endif
#if !defined(_PC_REC_MAX_XFER_SIZE)
# if defined(HAVE_CONST__PC_REC_MAX_XFER_SIZE)
#  define _PC_REC_MAX_XFER_SIZE _PC_REC_MAX_XFER_SIZE
# endif
#endif
#if !defined(_PC_REC_MIN_XFER_SIZE)
# if defined(HAVE_CONST__PC_REC_MIN_XFER_SIZE)
#  define _PC_REC_MIN_XFER_SIZE _PC_REC_MIN_XFER_SIZE
# endif
#endif
#if !defined(_PC_REC_XFER_ALIGN)
# if defined(HAVE_CONST__PC_REC_XFER_ALIGN)
#  define _PC_REC_XFER_ALIGN _PC_REC_XFER_ALIGN
# endif
#endif
#if !defined(_PC_SYMLINK_MAX)
# if defined(HAVE_CONST__PC_SYMLINK_MAX)
#  define _PC_SYMLINK_MAX _PC_SYMLINK_MAX
# endif
#endif
#if !defined(_PC_CHOWN_RESTRICTED)
# if defined(HAVE_CONST__PC_CHOWN_RESTRICTED)
#  define _PC_CHOWN_RESTRICTED _PC_CHOWN_RESTRICTED
# endif
#endif
#if !defined(_PC_NO_TRUNC)
# if defined(HAVE_CONST__PC_NO_TRUNC)
#  define _PC_NO_TRUNC _PC_NO_TRUNC
# endif
#endif
#if !defined(_PC_VDISABLE)
# if defined(HAVE_CONST__PC_VDISABLE)
#  define _PC_VDISABLE _PC_VDISABLE
# endif
#endif
#if !defined(_PC_ASYNC_IO)
# if defined(HAVE_CONST__PC_ASYNC_IO)
#  define _PC_ASYNC_IO _PC_ASYNC_IO
# endif
#endif
#if !defined(_PC_PRIO_IO)
# if defined(HAVE_CONST__PC_PRIO_IO)
#  define _PC_PRIO_IO _PC_PRIO_IO
# endif
#endif
#if !defined(_PC_SYNC_IO)
# if defined(HAVE_CONST__PC_SYNC_IO)
#  define _PC_SYNC_IO _PC_SYNC_IO
# endif
#endif
#if !defined(_PC_TIMESTAMP_RESOLUTION)
# if defined(HAVE_CONST__PC_TIMESTAMP_RESOLUTION)
#  define _PC_TIMESTAMP_RESOLUTION _PC_TIMESTAMP_RESOLUTION
# endif
#endif

/* autogenerated file */

#ifdef HAVE_LONG_LONG
#define INTEGER2NUM(n) \
    (FIXNUM_MAX < (n) ? ULL2NUM(n) : \
     FIXNUM_MIN > (LONG_LONG)(n) ? LL2NUM(n) : \
     LONG2FIX(n))
#else
#define INTEGER2NUM(n) \
    (FIXNUM_MAX < (n) ? ULONG2NUM(n) : \
     FIXNUM_MIN > (long)(n) ? LONG2NUM(n) : \
     LONG2FIX(n))
#endif

static void
init_constants(VALUE mod)
{
#if defined(_SC_AIO_LISTIO_MAX)
    rb_define_const(mod, "SC_AIO_LISTIO_MAX", INTEGER2NUM(_SC_AIO_LISTIO_MAX));
#endif
#if defined(_SC_AIO_MAX)
    rb_define_const(mod, "SC_AIO_MAX", INTEGER2NUM(_SC_AIO_MAX));
#endif
#if defined(_SC_AIO_PRIO_DELTA_MAX)
    rb_define_const(mod, "SC_AIO_PRIO_DELTA_MAX", INTEGER2NUM(_SC_AIO_PRIO_DELTA_MAX));
#endif
#if defined(_SC_ARG_MAX)
    rb_define_const(mod, "SC_ARG_MAX", INTEGER2NUM(_SC_ARG_MAX));
#endif
#if defined(_SC_ATEXIT_MAX)
    rb_define_const(mod, "SC_ATEXIT_MAX", INTEGER2NUM(_SC_ATEXIT_MAX));
#endif
#if defined(_SC_BC_BASE_MAX)
    rb_define_const(mod, "SC_BC_BASE_MAX", INTEGER2NUM(_SC_BC_BASE_MAX));
#endif
#if defined(_SC_BC_DIM_MAX)
    rb_define_const(mod, "SC_BC_DIM_MAX", INTEGER2NUM(_SC_BC_DIM_MAX));
#endif
#if defined(_SC_BC_SCALE_MAX)
    rb_define_const(mod, "SC_BC_SCALE_MAX", INTEGER2NUM(_SC_BC_SCALE_MAX));
#endif
#if defined(_SC_BC_STRING_MAX)
    rb_define_const(mod, "SC_BC_STRING_MAX", INTEGER2NUM(_SC_BC_STRING_MAX));
#endif
#if defined(_SC_CHILD_MAX)
    rb_define_const(mod, "SC_CHILD_MAX", INTEGER2NUM(_SC_CHILD_MAX));
#endif
#if defined(_SC_CLK_TCK)
    rb_define_const(mod, "SC_CLK_TCK", INTEGER2NUM(_SC_CLK_TCK));
#endif
#if defined(_SC_COLL_WEIGHTS_MAX)
    rb_define_const(mod, "SC_COLL_WEIGHTS_MAX", INTEGER2NUM(_SC_COLL_WEIGHTS_MAX));
#endif
#if defined(_SC_DELAYTIMER_MAX)
    rb_define_const(mod, "SC_DELAYTIMER_MAX", INTEGER2NUM(_SC_DELAYTIMER_MAX));
#endif
#if defined(_SC_EXPR_NEST_MAX)
    rb_define_const(mod, "SC_EXPR_NEST_MAX", INTEGER2NUM(_SC_EXPR_NEST_MAX));
#endif
#if defined(_SC_HOST_NAME_MAX)
    rb_define_const(mod, "SC_HOST_NAME_MAX", INTEGER2NUM(_SC_HOST_NAME_MAX));
#endif
#if defined(_SC_IOV_MAX)
    rb_define_const(mod, "SC_IOV_MAX", INTEGER2NUM(_SC_IOV_MAX));
#endif
#if defined(_SC_LINE_MAX)
    rb_define_const(mod, "SC_LINE_MAX", INTEGER2NUM(_SC_LINE_MAX));
#endif
#if defined(_SC_LOGIN_NAME_MAX)
    rb_define_const(mod, "SC_LOGIN_NAME_MAX", INTEGER2NUM(_SC_LOGIN_NAME_MAX));
#endif
#if defined(_SC_NGROUPS_MAX)
    rb_define_const(mod, "SC_NGROUPS_MAX", INTEGER2NUM(_SC_NGROUPS_MAX));
#endif
#if defined(_SC_GETGR_R_SIZE_MAX)
    rb_define_const(mod, "SC_GETGR_R_SIZE_MAX", INTEGER2NUM(_SC_GETGR_R_SIZE_MAX));
#endif
#if defined(_SC_GETPW_R_SIZE_MAX)
    rb_define_const(mod, "SC_GETPW_R_SIZE_MAX", INTEGER2NUM(_SC_GETPW_R_SIZE_MAX));
#endif
#if defined(_SC_MQ_OPEN_MAX)
    rb_define_const(mod, "SC_MQ_OPEN_MAX", INTEGER2NUM(_SC_MQ_OPEN_MAX));
#endif
#if defined(_SC_MQ_PRIO_MAX)
    rb_define_const(mod, "SC_MQ_PRIO_MAX", INTEGER2NUM(_SC_MQ_PRIO_MAX));
#endif
#if defined(_SC_OPEN_MAX)
    rb_define_const(mod, "SC_OPEN_MAX", INTEGER2NUM(_SC_OPEN_MAX));
#endif
#if defined(_SC_ADVISORY_INFO)
    rb_define_const(mod, "SC_ADVISORY_INFO", INTEGER2NUM(_SC_ADVISORY_INFO));
#endif
#if defined(_SC_BARRIERS)
    rb_define_const(mod, "SC_BARRIERS", INTEGER2NUM(_SC_BARRIERS));
#endif
#if defined(_SC_ASYNCHRONOUS_IO)
    rb_define_const(mod, "SC_ASYNCHRONOUS_IO", INTEGER2NUM(_SC_ASYNCHRONOUS_IO));
#endif
#if defined(_SC_CLOCK_SELECTION)
    rb_define_const(mod, "SC_CLOCK_SELECTION", INTEGER2NUM(_SC_CLOCK_SELECTION));
#endif
#if defined(_SC_CPUTIME)
    rb_define_const(mod, "SC_CPUTIME", INTEGER2NUM(_SC_CPUTIME));
#endif
#if defined(_SC_FSYNC)
    rb_define_const(mod, "SC_FSYNC", INTEGER2NUM(_SC_FSYNC));
#endif
#if defined(_SC_IPV6)
    rb_define_const(mod, "SC_IPV6", INTEGER2NUM(_SC_IPV6));
#endif
#if defined(_SC_JOB_CONTROL)
    rb_define_const(mod, "SC_JOB_CONTROL", INTEGER2NUM(_SC_JOB_CONTROL));
#endif
#if defined(_SC_MAPPED_FILES)
    rb_define_const(mod, "SC_MAPPED_FILES", INTEGER2NUM(_SC_MAPPED_FILES));
#endif
#if defined(_SC_MEMLOCK)
    rb_define_const(mod, "SC_MEMLOCK", INTEGER2NUM(_SC_MEMLOCK));
#endif
#if defined(_SC_MEMLOCK_RANGE)
    rb_define_const(mod, "SC_MEMLOCK_RANGE", INTEGER2NUM(_SC_MEMLOCK_RANGE));
#endif
#if defined(_SC_MEMORY_PROTECTION)
    rb_define_const(mod, "SC_MEMORY_PROTECTION", INTEGER2NUM(_SC_MEMORY_PROTECTION));
#endif
#if defined(_SC_MESSAGE_PASSING)
    rb_define_const(mod, "SC_MESSAGE_PASSING", INTEGER2NUM(_SC_MESSAGE_PASSING));
#endif
#if defined(_SC_MONOTONIC_CLOCK)
    rb_define_const(mod, "SC_MONOTONIC_CLOCK", INTEGER2NUM(_SC_MONOTONIC_CLOCK));
#endif
#if defined(_SC_PRIORITIZED_IO)
    rb_define_const(mod, "SC_PRIORITIZED_IO", INTEGER2NUM(_SC_PRIORITIZED_IO));
#endif
#if defined(_SC_PRIORITY_SCHEDULING)
    rb_define_const(mod, "SC_PRIORITY_SCHEDULING", INTEGER2NUM(_SC_PRIORITY_SCHEDULING));
#endif
#if defined(_SC_RAW_SOCKETS)
    rb_define_const(mod, "SC_RAW_SOCKETS", INTEGER2NUM(_SC_RAW_SOCKETS));
#endif
#if defined(_SC_READER_WRITER_LOCKS)
    rb_define_const(mod, "SC_READER_WRITER_LOCKS", INTEGER2NUM(_SC_READER_WRITER_LOCKS));
#endif
#if defined(_SC_REALTIME_SIGNALS)
    rb_define_const(mod, "SC_REALTIME_SIGNALS", INTEGER2NUM(_SC_REALTIME_SIGNALS));
#endif
#if defined(_SC_REGEXP)
    rb_define_const(mod, "SC_REGEXP", INTEGER2NUM(_SC_REGEXP));
#endif
#if defined(_SC_SAVED_IDS)
    rb_define_const(mod, "SC_SAVED_IDS", INTEGER2NUM(_SC_SAVED_IDS));
#endif
#if defined(_SC_SEMAPHORES)
    rb_define_const(mod, "SC_SEMAPHORES", INTEGER2NUM(_SC_SEMAPHORES));
#endif
#if defined(_SC_SHARED_MEMORY_OBJECTS)
    rb_define_const(mod, "SC_SHARED_MEMORY_OBJECTS", INTEGER2NUM(_SC_SHARED_MEMORY_OBJECTS));
#endif
#if defined(_SC_SHELL)
    rb_define_const(mod, "SC_SHELL", INTEGER2NUM(_SC_SHELL));
#endif
#if defined(_SC_SPAWN)
    rb_define_const(mod, "SC_SPAWN", INTEGER2NUM(_SC_SPAWN));
#endif
#if defined(_SC_SPIN_LOCKS)
    rb_define_const(mod, "SC_SPIN_LOCKS", INTEGER2NUM(_SC_SPIN_LOCKS));
#endif
#if defined(_SC_SPORADIC_SERVER)
    rb_define_const(mod, "SC_SPORADIC_SERVER", INTEGER2NUM(_SC_SPORADIC_SERVER));
#endif
#if defined(_SC_SS_REPL_MAX)
    rb_define_const(mod, "SC_SS_REPL_MAX", INTEGER2NUM(_SC_SS_REPL_MAX));
#endif
#if defined(_SC_SYNCHRONIZED_IO)
    rb_define_const(mod, "SC_SYNCHRONIZED_IO", INTEGER2NUM(_SC_SYNCHRONIZED_IO));
#endif
#if defined(_SC_THREAD_ATTR_STACKADDR)
    rb_define_const(mod, "SC_THREAD_ATTR_STACKADDR", INTEGER2NUM(_SC_THREAD_ATTR_STACKADDR));
#endif
#if defined(_SC_THREAD_ATTR_STACKSIZE)
    rb_define_const(mod, "SC_THREAD_ATTR_STACKSIZE", INTEGER2NUM(_SC_THREAD_ATTR_STACKSIZE));
#endif
#if defined(_SC_THREAD_CPUTIME)
    rb_define_const(mod, "SC_THREAD_CPUTIME", INTEGER2NUM(_SC_THREAD_CPUTIME));
#endif
#if defined(_SC_THREAD_PRIO_INHERIT)
    rb_define_const(mod, "SC_THREAD_PRIO_INHERIT", INTEGER2NUM(_SC_THREAD_PRIO_INHERIT));
#endif
#if defined(_SC_THREAD_PRIO_PROTECT)
    rb_define_const(mod, "SC_THREAD_PRIO_PROTECT", INTEGER2NUM(_SC_THREAD_PRIO_PROTECT));
#endif
#if defined(_SC_THREAD_PRIORITY_SCHEDULING)
    rb_define_const(mod, "SC_THREAD_PRIORITY_SCHEDULING", INTEGER2NUM(_SC_THREAD_PRIORITY_SCHEDULING));
#endif
#if defined(_SC_THREAD_PROCESS_SHARED)
    rb_define_const(mod, "SC_THREAD_PROCESS_SHARED", INTEGER2NUM(_SC_THREAD_PROCESS_SHARED));
#endif
#if defined(_SC_THREAD_ROBUST_PRIO_INHERIT)
    rb_define_const(mod, "SC_THREAD_ROBUST_PRIO_INHERIT", INTEGER2NUM(_SC_THREAD_ROBUST_PRIO_INHERIT));
#endif
#if defined(_SC_THREAD_ROBUST_PRIO_PROTECT)
    rb_define_const(mod, "SC_THREAD_ROBUST_PRIO_PROTECT", INTEGER2NUM(_SC_THREAD_ROBUST_PRIO_PROTECT));
#endif
#if defined(_SC_THREAD_SAFE_FUNCTIONS)
    rb_define_const(mod, "SC_THREAD_SAFE_FUNCTIONS", INTEGER2NUM(_SC_THREAD_SAFE_FUNCTIONS));
#endif
#if defined(_SC_THREAD_SPORADIC_SERVER)
    rb_define_const(mod, "SC_THREAD_SPORADIC_SERVER", INTEGER2NUM(_SC_THREAD_SPORADIC_SERVER));
#endif
#if defined(_SC_THREADS)
    rb_define_const(mod, "SC_THREADS", INTEGER2NUM(_SC_THREADS));
#endif
#if defined(_SC_TIMEOUTS)
    rb_define_const(mod, "SC_TIMEOUTS", INTEGER2NUM(_SC_TIMEOUTS));
#endif
#if defined(_SC_TIMERS)
    rb_define_const(mod, "SC_TIMERS", INTEGER2NUM(_SC_TIMERS));
#endif
#if defined(_SC_TRACE)
    rb_define_const(mod, "SC_TRACE", INTEGER2NUM(_SC_TRACE));
#endif
#if defined(_SC_TRACE_EVENT_FILTER)
    rb_define_const(mod, "SC_TRACE_EVENT_FILTER", INTEGER2NUM(_SC_TRACE_EVENT_FILTER));
#endif
#if defined(_SC_TRACE_EVENT_NAME_MAX)
    rb_define_const(mod, "SC_TRACE_EVENT_NAME_MAX", INTEGER2NUM(_SC_TRACE_EVENT_NAME_MAX));
#endif
#if defined(_SC_TRACE_INHERIT)
    rb_define_const(mod, "SC_TRACE_INHERIT", INTEGER2NUM(_SC_TRACE_INHERIT));
#endif
#if defined(_SC_TRACE_LOG)
    rb_define_const(mod, "SC_TRACE_LOG", INTEGER2NUM(_SC_TRACE_LOG));
#endif
#if defined(_SC_TRACE_NAME_MAX)
    rb_define_const(mod, "SC_TRACE_NAME_MAX", INTEGER2NUM(_SC_TRACE_NAME_MAX));
#endif
#if defined(_SC_TRACE_SYS_MAX)
    rb_define_const(mod, "SC_TRACE_SYS_MAX", INTEGER2NUM(_SC_TRACE_SYS_MAX));
#endif
#if defined(_SC_TRACE_USER_EVENT_MAX)
    rb_define_const(mod, "SC_TRACE_USER_EVENT_MAX", INTEGER2NUM(_SC_TRACE_USER_EVENT_MAX));
#endif
#if defined(_SC_TYPED_MEMORY_OBJECTS)
    rb_define_const(mod, "SC_TYPED_MEMORY_OBJECTS", INTEGER2NUM(_SC_TYPED_MEMORY_OBJECTS));
#endif
#if defined(_SC_VERSION)
    rb_define_const(mod, "SC_VERSION", INTEGER2NUM(_SC_VERSION));
#endif
#if defined(_SC_V7_ILP32_OFF32)
    rb_define_const(mod, "SC_V7_ILP32_OFF32", INTEGER2NUM(_SC_V7_ILP32_OFF32));
#endif
#if defined(_SC_V7_ILP32_OFFBIG)
    rb_define_const(mod, "SC_V7_ILP32_OFFBIG", INTEGER2NUM(_SC_V7_ILP32_OFFBIG));
#endif
#if defined(_SC_V7_LP64_OFF64)
    rb_define_const(mod, "SC_V7_LP64_OFF64", INTEGER2NUM(_SC_V7_LP64_OFF64));
#endif
#if defined(_SC_V7_LPBIG_OFFBIG)
    rb_define_const(mod, "SC_V7_LPBIG_OFFBIG", INTEGER2NUM(_SC_V7_LPBIG_OFFBIG));
#endif
#if defined(_SC_V6_ILP32_OFF32)
    rb_define_const(mod, "SC_V6_ILP32_OFF32", INTEGER2NUM(_SC_V6_ILP32_OFF32));
#endif
#if defined(_SC_V6_ILP32_OFFBIG)
    rb_define_const(mod, "SC_V6_ILP32_OFFBIG", INTEGER2NUM(_SC_V6_ILP32_OFFBIG));
#endif
#if defined(_SC_V6_LP64_OFF64)
    rb_define_const(mod, "SC_V6_LP64_OFF64", INTEGER2NUM(_SC_V6_LP64_OFF64));
#endif
#if defined(_SC_V6_LPBIG_OFFBIG)
    rb_define_const(mod, "SC_V6_LPBIG_OFFBIG", INTEGER2NUM(_SC_V6_LPBIG_OFFBIG));
#endif
#if defined(_SC_2_C_BIND)
    rb_define_const(mod, "SC_2_C_BIND", INTEGER2NUM(_SC_2_C_BIND));
#endif
#if defined(_SC_2_C_DEV)
    rb_define_const(mod, "SC_2_C_DEV", INTEGER2NUM(_SC_2_C_DEV));
#endif
#if defined(_SC_2_CHAR_TERM)
    rb_define_const(mod, "SC_2_CHAR_TERM", INTEGER2NUM(_SC_2_CHAR_TERM));
#endif
#if defined(_SC_2_FORT_DEV)
    rb_define_const(mod, "SC_2_FORT_DEV", INTEGER2NUM(_SC_2_FORT_DEV));
#endif
#if defined(_SC_2_FORT_RUN)
    rb_define_const(mod, "SC_2_FORT_RUN", INTEGER2NUM(_SC_2_FORT_RUN));
#endif
#if defined(_SC_2_LOCALEDEF)
    rb_define_const(mod, "SC_2_LOCALEDEF", INTEGER2NUM(_SC_2_LOCALEDEF));
#endif
#if defined(_SC_2_PBS)
    rb_define_const(mod, "SC_2_PBS", INTEGER2NUM(_SC_2_PBS));
#endif
#if defined(_SC_2_PBS_ACCOUNTING)
    rb_define_const(mod, "SC_2_PBS_ACCOUNTING", INTEGER2NUM(_SC_2_PBS_ACCOUNTING));
#endif
#if defined(_SC_2_PBS_CHECKPOINT)
    rb_define_const(mod, "SC_2_PBS_CHECKPOINT", INTEGER2NUM(_SC_2_PBS_CHECKPOINT));
#endif
#if defined(_SC_2_PBS_LOCATE)
    rb_define_const(mod, "SC_2_PBS_LOCATE", INTEGER2NUM(_SC_2_PBS_LOCATE));
#endif
#if defined(_SC_2_PBS_MESSAGE)
    rb_define_const(mod, "SC_2_PBS_MESSAGE", INTEGER2NUM(_SC_2_PBS_MESSAGE));
#endif
#if defined(_SC_2_PBS_TRACK)
    rb_define_const(mod, "SC_2_PBS_TRACK", INTEGER2NUM(_SC_2_PBS_TRACK));
#endif
#if defined(_SC_2_SW_DEV)
    rb_define_const(mod, "SC_2_SW_DEV", INTEGER2NUM(_SC_2_SW_DEV));
#endif
#if defined(_SC_2_UPE)
    rb_define_const(mod, "SC_2_UPE", INTEGER2NUM(_SC_2_UPE));
#endif
#if defined(_SC_2_VERSION)
    rb_define_const(mod, "SC_2_VERSION", INTEGER2NUM(_SC_2_VERSION));
#endif
#if defined(_SC_PAGE_SIZE)
    rb_define_const(mod, "SC_PAGE_SIZE", INTEGER2NUM(_SC_PAGE_SIZE));
#endif
#if defined(_SC_PAGESIZE)
    rb_define_const(mod, "SC_PAGESIZE", INTEGER2NUM(_SC_PAGESIZE));
#endif
#if defined(_SC_THREAD_DESTRUCTOR_ITERATIONS)
    rb_define_const(mod, "SC_THREAD_DESTRUCTOR_ITERATIONS", INTEGER2NUM(_SC_THREAD_DESTRUCTOR_ITERATIONS));
#endif
#if defined(_SC_THREAD_KEYS_MAX)
    rb_define_const(mod, "SC_THREAD_KEYS_MAX", INTEGER2NUM(_SC_THREAD_KEYS_MAX));
#endif
#if defined(_SC_THREAD_STACK_MIN)
    rb_define_const(mod, "SC_THREAD_STACK_MIN", INTEGER2NUM(_SC_THREAD_STACK_MIN));
#endif
#if defined(_SC_THREAD_THREADS_MAX)
    rb_define_const(mod, "SC_THREAD_THREADS_MAX", INTEGER2NUM(_SC_THREAD_THREADS_MAX));
#endif
#if defined(_SC_RE_DUP_MAX)
    rb_define_const(mod, "SC_RE_DUP_MAX", INTEGER2NUM(_SC_RE_DUP_MAX));
#endif
#if defined(_SC_RTSIG_MAX)
    rb_define_const(mod, "SC_RTSIG_MAX", INTEGER2NUM(_SC_RTSIG_MAX));
#endif
#if defined(_SC_SEM_NSEMS_MAX)
    rb_define_const(mod, "SC_SEM_NSEMS_MAX", INTEGER2NUM(_SC_SEM_NSEMS_MAX));
#endif
#if defined(_SC_SEM_VALUE_MAX)
    rb_define_const(mod, "SC_SEM_VALUE_MAX", INTEGER2NUM(_SC_SEM_VALUE_MAX));
#endif
#if defined(_SC_SIGQUEUE_MAX)
    rb_define_const(mod, "SC_SIGQUEUE_MAX", INTEGER2NUM(_SC_SIGQUEUE_MAX));
#endif
#if defined(_SC_STREAM_MAX)
    rb_define_const(mod, "SC_STREAM_MAX", INTEGER2NUM(_SC_STREAM_MAX));
#endif
#if defined(_SC_SYMLOOP_MAX)
    rb_define_const(mod, "SC_SYMLOOP_MAX", INTEGER2NUM(_SC_SYMLOOP_MAX));
#endif
#if defined(_SC_TIMER_MAX)
    rb_define_const(mod, "SC_TIMER_MAX", INTEGER2NUM(_SC_TIMER_MAX));
#endif
#if defined(_SC_TTY_NAME_MAX)
    rb_define_const(mod, "SC_TTY_NAME_MAX", INTEGER2NUM(_SC_TTY_NAME_MAX));
#endif
#if defined(_SC_TZNAME_MAX)
    rb_define_const(mod, "SC_TZNAME_MAX", INTEGER2NUM(_SC_TZNAME_MAX));
#endif
#if defined(_SC_XOPEN_CRYPT)
    rb_define_const(mod, "SC_XOPEN_CRYPT", INTEGER2NUM(_SC_XOPEN_CRYPT));
#endif
#if defined(_SC_XOPEN_ENH_I18N)
    rb_define_const(mod, "SC_XOPEN_ENH_I18N", INTEGER2NUM(_SC_XOPEN_ENH_I18N));
#endif
#if defined(_SC_XOPEN_REALTIME)
    rb_define_const(mod, "SC_XOPEN_REALTIME", INTEGER2NUM(_SC_XOPEN_REALTIME));
#endif
#if defined(_SC_XOPEN_REALTIME_THREADS)
    rb_define_const(mod, "SC_XOPEN_REALTIME_THREADS", INTEGER2NUM(_SC_XOPEN_REALTIME_THREADS));
#endif
#if defined(_SC_XOPEN_SHM)
    rb_define_const(mod, "SC_XOPEN_SHM", INTEGER2NUM(_SC_XOPEN_SHM));
#endif
#if defined(_SC_XOPEN_STREAMS)
    rb_define_const(mod, "SC_XOPEN_STREAMS", INTEGER2NUM(_SC_XOPEN_STREAMS));
#endif
#if defined(_SC_XOPEN_UNIX)
    rb_define_const(mod, "SC_XOPEN_UNIX", INTEGER2NUM(_SC_XOPEN_UNIX));
#endif
#if defined(_SC_XOPEN_UUCP)
    rb_define_const(mod, "SC_XOPEN_UUCP", INTEGER2NUM(_SC_XOPEN_UUCP));
#endif
#if defined(_SC_XOPEN_VERSION)
    rb_define_const(mod, "SC_XOPEN_VERSION", INTEGER2NUM(_SC_XOPEN_VERSION));
#endif
#if defined(_SC_PHYS_PAGES)
    rb_define_const(mod, "SC_PHYS_PAGES", INTEGER2NUM(_SC_PHYS_PAGES));
#endif
#if defined(_SC_AVPHYS_PAGES)
    rb_define_const(mod, "SC_AVPHYS_PAGES", INTEGER2NUM(_SC_AVPHYS_PAGES));
#endif
#if defined(_SC_NPROCESSORS_CONF)
    rb_define_const(mod, "SC_NPROCESSORS_CONF", INTEGER2NUM(_SC_NPROCESSORS_CONF));
#endif
#if defined(_SC_NPROCESSORS_ONLN)
    rb_define_const(mod, "SC_NPROCESSORS_ONLN", INTEGER2NUM(_SC_NPROCESSORS_ONLN));
#endif
#if defined(_SC_CPUSET_SIZE)
    rb_define_const(mod, "SC_CPUSET_SIZE", INTEGER2NUM(_SC_CPUSET_SIZE));
#endif
#if defined(_CS_PATH)
    rb_define_const(mod, "CS_PATH", INTEGER2NUM(_CS_PATH));
#endif
#if defined(_CS_POSIX_V7_ILP32_OFF32_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_ILP32_OFF32_CFLAGS", INTEGER2NUM(_CS_POSIX_V7_ILP32_OFF32_CFLAGS));
#endif
#if defined(_CS_POSIX_V7_ILP32_OFF32_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_ILP32_OFF32_LDFLAGS", INTEGER2NUM(_CS_POSIX_V7_ILP32_OFF32_LDFLAGS));
#endif
#if defined(_CS_POSIX_V7_ILP32_OFF32_LIBS)
    rb_define_const(mod, "CS_POSIX_V7_ILP32_OFF32_LIBS", INTEGER2NUM(_CS_POSIX_V7_ILP32_OFF32_LIBS));
#endif
#if defined(_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_ILP32_OFFBIG_CFLAGS", INTEGER2NUM(_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS));
#endif
#if defined(_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS", INTEGER2NUM(_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS));
#endif
#if defined(_CS_POSIX_V7_ILP32_OFFBIG_LIBS)
    rb_define_const(mod, "CS_POSIX_V7_ILP32_OFFBIG_LIBS", INTEGER2NUM(_CS_POSIX_V7_ILP32_OFFBIG_LIBS));
#endif
#if defined(_CS_POSIX_V7_LP64_OFF64_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_LP64_OFF64_CFLAGS", INTEGER2NUM(_CS_POSIX_V7_LP64_OFF64_CFLAGS));
#endif
#if defined(_CS_POSIX_V7_LP64_OFF64_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_LP64_OFF64_LDFLAGS", INTEGER2NUM(_CS_POSIX_V7_LP64_OFF64_LDFLAGS));
#endif
#if defined(_CS_POSIX_V7_LP64_OFF64_LIBS)
    rb_define_const(mod, "CS_POSIX_V7_LP64_OFF64_LIBS", INTEGER2NUM(_CS_POSIX_V7_LP64_OFF64_LIBS));
#endif
#if defined(_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS", INTEGER2NUM(_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS));
#endif
#if defined(_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS", INTEGER2NUM(_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS));
#endif
#if defined(_CS_POSIX_V7_LPBIG_OFFBIG_LIBS)
    rb_define_const(mod, "CS_POSIX_V7_LPBIG_OFFBIG_LIBS", INTEGER2NUM(_CS_POSIX_V7_LPBIG_OFFBIG_LIBS));
#endif
#if defined(_CS_POSIX_V7_THREADS_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_THREADS_CFLAGS", INTEGER2NUM(_CS_POSIX_V7_THREADS_CFLAGS));
#endif
#if defined(_CS_POSIX_V7_THREADS_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V7_THREADS_LDFLAGS", INTEGER2NUM(_CS_POSIX_V7_THREADS_LDFLAGS));
#endif
#if defined(_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS)
    rb_define_const(mod, "CS_POSIX_V7_WIDTH_RESTRICTED_ENVS", INTEGER2NUM(_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS));
#endif
#if defined(_CS_V7_ENV)
    rb_define_const(mod, "CS_V7_ENV", INTEGER2NUM(_CS_V7_ENV));
#endif
#if defined(_CS_POSIX_V6_ILP32_OFF32_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V6_ILP32_OFF32_CFLAGS", INTEGER2NUM(_CS_POSIX_V6_ILP32_OFF32_CFLAGS));
#endif
#if defined(_CS_POSIX_V6_ILP32_OFF32_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V6_ILP32_OFF32_LDFLAGS", INTEGER2NUM(_CS_POSIX_V6_ILP32_OFF32_LDFLAGS));
#endif
#if defined(_CS_POSIX_V6_ILP32_OFF32_LIBS)
    rb_define_const(mod, "CS_POSIX_V6_ILP32_OFF32_LIBS", INTEGER2NUM(_CS_POSIX_V6_ILP32_OFF32_LIBS));
#endif
#if defined(_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V6_ILP32_OFFBIG_CFLAGS", INTEGER2NUM(_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS));
#endif
#if defined(_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS", INTEGER2NUM(_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS));
#endif
#if defined(_CS_POSIX_V6_ILP32_OFFBIG_LIBS)
    rb_define_const(mod, "CS_POSIX_V6_ILP32_OFFBIG_LIBS", INTEGER2NUM(_CS_POSIX_V6_ILP32_OFFBIG_LIBS));
#endif
#if defined(_CS_POSIX_V6_LP64_OFF64_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V6_LP64_OFF64_CFLAGS", INTEGER2NUM(_CS_POSIX_V6_LP64_OFF64_CFLAGS));
#endif
#if defined(_CS_POSIX_V6_LP64_OFF64_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V6_LP64_OFF64_LDFLAGS", INTEGER2NUM(_CS_POSIX_V6_LP64_OFF64_LDFLAGS));
#endif
#if defined(_CS_POSIX_V6_LP64_OFF64_LIBS)
    rb_define_const(mod, "CS_POSIX_V6_LP64_OFF64_LIBS", INTEGER2NUM(_CS_POSIX_V6_LP64_OFF64_LIBS));
#endif
#if defined(_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS)
    rb_define_const(mod, "CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS", INTEGER2NUM(_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS));
#endif
#if defined(_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS)
    rb_define_const(mod, "CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS", INTEGER2NUM(_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS));
#endif
#if defined(_CS_POSIX_V6_LPBIG_OFFBIG_LIBS)
    rb_define_const(mod, "CS_POSIX_V6_LPBIG_OFFBIG_LIBS", INTEGER2NUM(_CS_POSIX_V6_LPBIG_OFFBIG_LIBS));
#endif
#if defined(_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS)
    rb_define_const(mod, "CS_POSIX_V6_WIDTH_RESTRICTED_ENVS", INTEGER2NUM(_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS));
#endif
#if defined(_CS_V6_ENV)
    rb_define_const(mod, "CS_V6_ENV", INTEGER2NUM(_CS_V6_ENV));
#endif
#if defined(_CS_GNU_LIBC_VERSION)
    rb_define_const(mod, "CS_GNU_LIBC_VERSION", INTEGER2NUM(_CS_GNU_LIBC_VERSION));
#endif
#if defined(_CS_GNU_LIBPTHREAD_VERSION)
    rb_define_const(mod, "CS_GNU_LIBPTHREAD_VERSION", INTEGER2NUM(_CS_GNU_LIBPTHREAD_VERSION));
#endif
#if defined(_PC_FILESIZEBITS)
    rb_define_const(mod, "PC_FILESIZEBITS", INTEGER2NUM(_PC_FILESIZEBITS));
#endif
#if defined(_PC_LINK_MAX)
    rb_define_const(mod, "PC_LINK_MAX", INTEGER2NUM(_PC_LINK_MAX));
#endif
#if defined(_PC_MAX_CANON)
    rb_define_const(mod, "PC_MAX_CANON", INTEGER2NUM(_PC_MAX_CANON));
#endif
#if defined(_PC_MAX_INPUT)
    rb_define_const(mod, "PC_MAX_INPUT", INTEGER2NUM(_PC_MAX_INPUT));
#endif
#if defined(_PC_NAME_MAX)
    rb_define_const(mod, "PC_NAME_MAX", INTEGER2NUM(_PC_NAME_MAX));
#endif
#if defined(_PC_PATH_MAX)
    rb_define_const(mod, "PC_PATH_MAX", INTEGER2NUM(_PC_PATH_MAX));
#endif
#if defined(_PC_PIPE_BUF)
    rb_define_const(mod, "PC_PIPE_BUF", INTEGER2NUM(_PC_PIPE_BUF));
#endif
#if defined(_PC_2_SYMLINKS)
    rb_define_const(mod, "PC_2_SYMLINKS", INTEGER2NUM(_PC_2_SYMLINKS));
#endif
#if defined(_PC_ALLOC_SIZE_MIN)
    rb_define_const(mod, "PC_ALLOC_SIZE_MIN", INTEGER2NUM(_PC_ALLOC_SIZE_MIN));
#endif
#if defined(_PC_REC_INCR_XFER_SIZE)
    rb_define_const(mod, "PC_REC_INCR_XFER_SIZE", INTEGER2NUM(_PC_REC_INCR_XFER_SIZE));
#endif
#if defined(_PC_REC_MAX_XFER_SIZE)
    rb_define_const(mod, "PC_REC_MAX_XFER_SIZE", INTEGER2NUM(_PC_REC_MAX_XFER_SIZE));
#endif
#if defined(_PC_REC_MIN_XFER_SIZE)
    rb_define_const(mod, "PC_REC_MIN_XFER_SIZE", INTEGER2NUM(_PC_REC_MIN_XFER_SIZE));
#endif
#if defined(_PC_REC_XFER_ALIGN)
    rb_define_const(mod, "PC_REC_XFER_ALIGN", INTEGER2NUM(_PC_REC_XFER_ALIGN));
#endif
#if defined(_PC_SYMLINK_MAX)
    rb_define_const(mod, "PC_SYMLINK_MAX", INTEGER2NUM(_PC_SYMLINK_MAX));
#endif
#if defined(_PC_CHOWN_RESTRICTED)
    rb_define_const(mod, "PC_CHOWN_RESTRICTED", INTEGER2NUM(_PC_CHOWN_RESTRICTED));
#endif
#if defined(_PC_NO_TRUNC)
    rb_define_const(mod, "PC_NO_TRUNC", INTEGER2NUM(_PC_NO_TRUNC));
#endif
#if defined(_PC_VDISABLE)
    rb_define_const(mod, "PC_VDISABLE", INTEGER2NUM(_PC_VDISABLE));
#endif
#if defined(_PC_ASYNC_IO)
    rb_define_const(mod, "PC_ASYNC_IO", INTEGER2NUM(_PC_ASYNC_IO));
#endif
#if defined(_PC_PRIO_IO)
    rb_define_const(mod, "PC_PRIO_IO", INTEGER2NUM(_PC_PRIO_IO));
#endif
#if defined(_PC_SYNC_IO)
    rb_define_const(mod, "PC_SYNC_IO", INTEGER2NUM(_PC_SYNC_IO));
#endif
#if defined(_PC_TIMESTAMP_RESOLUTION)
    rb_define_const(mod, "PC_TIMESTAMP_RESOLUTION", INTEGER2NUM(_PC_TIMESTAMP_RESOLUTION));
#endif

}
